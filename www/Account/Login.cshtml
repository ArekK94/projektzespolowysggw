@* W przypadku korzystania z pakietów usuń tę sekcję *@
@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

@{
    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "Logowanie";

    // Zainicjuj ogólne zmienne strony
    var username = "";
    var userPassword = "";
    string title = "Logowanie.";

    // Setup validation
    Validation.RequireField("username", "Musisz podać swój username.");
    Validation.RequireField("password", "Musisz określić userPassword.");
    Validation.Add("password",
        Validator.StringLength(
            maxLength: Int32.MaxValue,
            minLength: 6,
            errorMessage: "userPassword musi mieć co najmniej 6 znaków"));

    // Jeśli jest to żądanie POST, zweryfikuj dane i przetwórz je
    if (IsPost)
    {
        AntiForgery.Validate();
        username = Request.Form["username"];
        userPassword = Request.Form["userPassword"];
        title = POST.Login(username, userPassword);
        if (POST.autoryzowany)
        {
            POST.autoryzowany = false;
            //rozpoczęcie sesji
            Session["username"] = username;
            //przekierowanie na stronę główną
            Response.AddHeader("REFRESH", "2;URL=../");
        }
    }


}
<hgroup class="title">
    <h1>@title</h1>
</hgroup>

<section id="loginForm">
    <form method="post">
        @AntiForgery.GetHtml()
        @* Jeśli występuje choć jeden błąd weryfikacji, pokaż błąd *@
        @Html.ValidationSummary("Logowanie nie powiodło się. Popraw błędy i ponów próbę.", excludeFieldErrors: true, htmlAttributes: null)
        <fieldset>
            <legend>Zaloguj się do konta</legend>
            <ol>
                <li class="username">
                    <label for="username" @if (!ModelState.IsValidField("username")) { <text> class="error-label" </text> }>username</label>
                    <input type="text" id="username" name="username" value="@username" @Validation.For("username") />
                    @* Wypisz wszelkie błędy weryfikacji nazwy użytkownika na stronie *@
                    @Html.ValidationMessage("username")
                </li>
                <li class="userPassword">
                    <label for="userPassword" @if (!ModelState.IsValidField("userPassword")) { <text> class="error-label" </text> }>userPassword</label>
                    <input type="password" id="userPassword" name="userPassword" @Validation.For("userPassword") />
                    @* Wypisz wszelkie błędy weryfikacji hasła na stronie *@
                    @Html.ValidationMessage("userPassword")
                </li>
            </ol>
            <input type="submit" value="Zaloguj" />
        </fieldset>
    </form>
    <p>
        <a href="~/Account/Register">Nie masz konta?</a>
        <a href="~/Account/ForgotPassword">Nie pamiętasz hasła?</a>
    </p>
</section>
